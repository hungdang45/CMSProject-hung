
@using PagedList
@using PagedList.Mvc;

@model IPagedList<CMSProject.Models.Product>

@*@{
        ViewBag.Title = "_Index";
        Layout = "~/Views/Shared/admin.cshtml";
    }*@
@{ 
    var productCode = ViewBag.productCode;
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Size)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ImageUpload)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DateCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DateUpdated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UpdateBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Unit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Category.CategoryName)
        </th>
        <th>Tùy chọn</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Status)*@

                @if (@item.Status == 1 )
                {
                <text>Đang bán</text>
                }
                else {
                <text>Dừng bán</text>
                }
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.ImageUpload)
                </td>*@
            <td>
                @if (item.ImageUpload != null)
                {
                    var base64 = Convert.ToBase64String(item.ImageUpload);
                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);

                    <img src="data:image;base64,@System.Convert.ToBase64String(item.ImageUpload)" alt="" width="150" height="125" />
                }
                else
                {
                    <img src="~/App_Data/uploads/Capture.JPG" style="max-width:100px;max-height:100px" / >
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateUpdated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Unit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                <a href="/Products/Edit/@item.ProductID" class="btn btn-primary"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                @Html.ActionLink("  ", "Details", new { id = item.ProductID }, new { @class = "btn btn-info fa fa-info-circle" })
                <button onclick="deldeteProduct(@item.ProductID)" class="btn btn-primary">X</button>
            </td>
        </tr>
    }

</table>

Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("_Index", new { page, productCode }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new AjaxOptions()
        {
            UpdateTargetId= "table-view"
        }
        )
    )
<script>
    function deldeteProduct(id) {
        var f = confirm("Bạn có muốn xóa sản phẩm này không?");
        if (f == true) {
            window.location.href = "/Products/deleteProducts/" + id;
        }
    }
</script>